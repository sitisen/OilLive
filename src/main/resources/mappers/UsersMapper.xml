<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oillive.dao.UsersDao">
	
	<!-- 로그인 -->
	<select id="login" parameterType="Map" resultType="int">
		SELECT count(*) 
		FROM users 
		WHERE user_id =  #{userId}
		AND user_pwd = #{userPwd}
	</select>
	
	<!-- 아이디 중복확인 -->
	<select id="idCheck" parameterType="String" resultType="int"> 
		SELECT count(*)
		FROM users
		WHERE user_id = #{userId}
	</select>

	<select id="idMCheck" parameterType="String" resultType="int"> 
		SELECT count(*)
		FROM admin
		WHERE admin_id = #{userId}
	</select>
	
	<!-- 휴대전화 중복확인 -->
	<select id="phoneCheck" parameterType="String" resultType="int"> 
		SELECT count(*)
		FROM users
		WHERE user_phone = #{phoneNum}
	</select>
	
	<!-- 회원가입 -->
	<insert id="signup" parameterType="Map">
		INSERT INTO users 
		VALUES ( seq_users.NEXTVAL , #{userId} , #{userPwd} , #{userName} , #{userPhone}
		 , #{userGender} , #{userBirth} , #{userAddress} , #{userEmail} , SYSDATE , 'Y')
	</insert>
	
	<!-- 비밀번호 반환 -->
	<select id="getPassword" parameterType="String" resultType="String">
		SELECT user_pwd
		FROM users
		WHERE user_id = #{userId}
	</select>
	
	<!-- 아이디 찾기 - 휴대전화 -->
	<select id="findIdPhone" parameterType="Map" resultType="String">
		SELECT user_id
		FROM users
		WHERE user_name = #{username}
		AND user_phone = #{userphone}
	</select>
	
	<!-- 아이디 찾기 - 이메일 -->
	<select id="findIdEmail" parameterType="Map" resultType="String">
		SELECT user_id
		FROM users
		WHERE user_name = #{username}
		AND user_email = #{useremail}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="pwdUpdate" parameterType="Map">
		UPDATE users
		SET user_pwd = #{userpwd}
		WHERE user_id = #{userid}
	</update>
	

	<!-- 사용자 정보 조회 -->
	<select id="selectUserInfo" parameterType="String" resultType="UsersVO">
		SELECT user_code, user_id, user_name, user_phone, user_gender, 
		       user_birth, user_address, user_email, user_date
		FROM users
		WHERE USER_ID = #{userId}
	</select>
	
	<!-- 사용자 카드 정보 조회 -->
	<select id="selectCardInfo" parameterType="String" resultType="CardVO">
		SELECT card_code, card_company, card_num, card_pwd, card_cvc, card_date
		  FROM card
		 WHERE user_code = #{userCode}
	</select>
	
	<!-- 사용자 카드 정보 등록 -->
	<insert id="insertCard" parameterType="CardVO">
		INSERT INTO card 
		     VALUES ( seq_card.NEXTVAL, #{userCode}, #{cardCompany}, #{cardNum}, #{cardPwd}, #{cardCvc}, #{cardDate} )		
	</insert>
	
	<!-- 사용자 카드 정보 교체 -->
	<update id="updateCard" parameterType="CardVO">
		UPDATE card
		   SET card_company = #{cardCompany},
		       card_num = #{cardNum},
		       card_pwd = #{cardPwd},
		       card_cvc = #{cardCvc},
		       card_date = #{cardDate}
		 WHERE user_code = #{userCode}	
	</update>

	<!-- 유저코드 반환 -->
	<select id="getUserCode" parameterType="String" resultType="int">
		SELECT user_code
		FROM users
		WHERE user_id = #{userid}
	</select>

	<!-- 사용자 장바구니 상품 중복 체크 -->
	<select id="basketExistCheck" parameterType="Map" resultType="int">
		SELECT count(*)
		  FROM basket
		 WHERE user_code = #{userCode}
		   AND goods_code = #{goodsCode}
	</select>

	<!-- 사용자 장바구니 상품 추가 -->
	<insert id="insertBasket" parameterType="Map">
		INSERT INTO basket
			 VALUES ( seq_basket.NEXTVAL, #{userCode}, #{goodsCode}, #{basketAmount} )
	</insert>
	
	<!-- 사용자 장바구니 수량 반환 -->
	<select id="getBasketCount" parameterType="int" resultType="int">
		SELECT count(*)
		FROM basket
		WHERE user_code = #{userCode}
	</select>
</mapper>